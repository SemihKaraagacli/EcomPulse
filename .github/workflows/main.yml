name: Deploy to Azure Web App

on:
  push:
    branches:
      - main # Ya da kullanmak istediğiniz başka bir branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # GitHub Actions tarafından kullanılan bir Azure hizmet bağlantısı
    - name: Checkout code
      uses: actions/checkout@v3

    # .NET SDK yükleniyor
    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    # Bağımlılıkların yüklenmesi
    - name: Restore dependencies
      run: dotnet restore ./EcomPulse.Api/EcomPulse.sln

    # Uygulamanın build edilmesi
    - name: Build the application
      run: dotnet build ./EcomPulse.Api/EcomPulse.sln --configuration Release

    # Uygulamanın publish edilmesi
    - name: Publish the application
      run: dotnet publish ./EcomPulse.Api/EcomPulse/EcomPulse.csproj --configuration Release --output './publish'

    # Publish dizininin doğrulanması
    - name: Verify publish directory
      run: ls -al ./publish  # Yeni output dizinini kontrol etmek için

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production

    steps:
    # Azure CLI'nin kurulumu
    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # Azure Web App'e deploy için Azure hizmet bağlantısının yapılması
    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ecompulseapi' # Azure Web App'in adını buraya yazın
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }} # Azure publish profile'ı GitHub Secrets'ınıza eklediğinizden emin olun
        package: './publish' # Yayınlanacak dosya burada doğru bir şekilde belirtiliyor
